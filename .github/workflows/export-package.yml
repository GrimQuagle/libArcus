---
name: conan-export
on:
  push:
    paths:
      - 'python/**'
      - 'src/**'
      - 'cmake/**'
      - 'conanfile.py'
      - 'CMakeLists.txt'
      - '.github/workflows/export-package.yml'
    branches:
      - main
      - master
      - 'CURA-*'
  pull_request:
    branches:
      - main
      - master
      - dev
env:
  CONAN_USER: ${{ secrets.CONAN_USER }}
  CONAN_PASS: ${{ secrets.CONAN_PASS }}
jobs:
  export-recipe:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout Arcus
        uses: actions/checkout@v3
        with:
          ref: ${{ github.head_ref }}
          fetch-depth: 0
      - name: Git Version
        uses: codacy/git-version@2.4.0

      - name: Setup Python and pip
        uses: actions/setup-python@v3
        with:
          python-version: '3.10.4'
          architecture: 'x64'
          cache: 'pip'
      - name: Prepare Conan and sip-build
        run: |
          pip install --require-hashes -r requirements.txt
          conan config install https://github.com/Ultimaker/conan-config.git -a "-b CURA-9177_Fix_CI_CD" -tf ~/.conan
          conan profile new default --detect
          conan user -p ${{ env.CONAN_PASS }} -r ultimaker ${{ env.CONAN_USER }}
      - name: Create the Packages and Upload
        run: |
          export SEMVER=$(./git-version)
          echo "Using version tag: ${SEMVER}"
          if [ "${{ github.ref_type }}" = "master" ]; then
            export CHANNEL="stable"
          elif [ "${{ github.ref_type }}" = "main" ]; then
            export CHANNEL="stable"
          else
            export CHANNEL="testing"
          fi
          echo "Using channel: ${CHANNEL}"
          conan create . arcus/${SEMVER}@${{ github.repository_owner }}/${CHANNEL} -pr:b cura_build.jinja
          conan upload "*" -r ultimaker --all -c
